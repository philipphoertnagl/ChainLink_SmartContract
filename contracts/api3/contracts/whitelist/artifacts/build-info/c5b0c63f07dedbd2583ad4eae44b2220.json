{
	"id": "c5b0c63f07dedbd2583ad4eae44b2220",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/api3/contracts/whitelist/Whitelist.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Contract to be inherited by contracts that need temporary and\n/// permanent whitelists for services identified by hashes\n/// @notice This contract implements two kinds of whitelisting:\n///   (1) Temporary, ends when the expiration timestamp is in the past\n///   (2) Indefinite, ends when the indefinite whitelist count is zero\n/// Multiple senders can indefinitely whitelist/unwhitelist independently. The\n/// user will be considered whitelisted as long as there is at least one active\n/// indefinite whitelisting.\n/// @dev The interface of this contract is not implemented. It should be\n/// inherited and its functions should be exposed with a sort of an\n/// authorization scheme.\ncontract Whitelist {\n    struct WhitelistStatus {\n        uint64 expirationTimestamp;\n        uint192 indefiniteWhitelistCount;\n    }\n\n    mapping(bytes32 => mapping(address => WhitelistStatus))\n        internal serviceIdToUserToWhitelistStatus;\n\n    mapping(bytes32 => mapping(address => mapping(address => bool)))\n        internal serviceIdToUserToSetterToIndefiniteWhitelistStatus;\n\n    /// @notice Extends the expiration of the temporary whitelist of the user\n    /// for the service\n    /// @param serviceId Service ID\n    /// @param user User address\n    /// @param expirationTimestamp Timestamp at which the temporary whitelist\n    /// will expire\n    function _extendWhitelistExpiration(\n        bytes32 serviceId,\n        address user,\n        uint64 expirationTimestamp\n    ) internal {\n        require(\n            expirationTimestamp >\n                serviceIdToUserToWhitelistStatus[serviceId][user]\n                    .expirationTimestamp,\n            \"Does not extend expiration\"\n        );\n        serviceIdToUserToWhitelistStatus[serviceId][user]\n            .expirationTimestamp = expirationTimestamp;\n    }\n\n    /// @notice Sets the expiration of the temporary whitelist of the user for\n    /// the service\n    /// @dev Unlike `extendWhitelistExpiration()`, this can hasten expiration\n    /// @param serviceId Service ID\n    /// @param user User address\n    /// @param expirationTimestamp Timestamp at which the temporary whitelist\n    /// will expire\n    function _setWhitelistExpiration(\n        bytes32 serviceId,\n        address user,\n        uint64 expirationTimestamp\n    ) internal {\n        serviceIdToUserToWhitelistStatus[serviceId][user]\n            .expirationTimestamp = expirationTimestamp;\n    }\n\n    /// @notice Sets the indefinite whitelist status of the user for the\n    /// service\n    /// @dev As long as at least there is at least one account that has set the\n    /// indefinite whitelist status of the user for the service as true, the\n    /// user will be considered whitelisted\n    /// @param serviceId Service ID\n    /// @param user User address\n    /// @param status Indefinite whitelist status\n    function _setIndefiniteWhitelistStatus(\n        bytes32 serviceId,\n        address user,\n        bool status\n    ) internal returns (uint192 indefiniteWhitelistCount) {\n        indefiniteWhitelistCount = serviceIdToUserToWhitelistStatus[serviceId][\n            user\n        ].indefiniteWhitelistCount;\n        if (\n            status &&\n            !serviceIdToUserToSetterToIndefiniteWhitelistStatus[serviceId][\n                user\n            ][msg.sender]\n        ) {\n            serviceIdToUserToSetterToIndefiniteWhitelistStatus[serviceId][user][\n                msg.sender\n            ] = true;\n            indefiniteWhitelistCount++;\n            serviceIdToUserToWhitelistStatus[serviceId][user]\n                .indefiniteWhitelistCount = indefiniteWhitelistCount;\n        } else if (\n            !status &&\n            serviceIdToUserToSetterToIndefiniteWhitelistStatus[serviceId][user][\n                msg.sender\n            ]\n        ) {\n            serviceIdToUserToSetterToIndefiniteWhitelistStatus[serviceId][user][\n                msg.sender\n            ] = false;\n            indefiniteWhitelistCount--;\n            serviceIdToUserToWhitelistStatus[serviceId][user]\n                .indefiniteWhitelistCount = indefiniteWhitelistCount;\n        }\n    }\n\n    /// @notice Revokes the indefinite whitelist status granted to the user for\n    /// the service by a specific account\n    /// @param serviceId Service ID\n    /// @param user User address\n    /// @param setter Setter of the indefinite whitelist status\n    function _revokeIndefiniteWhitelistStatus(\n        bytes32 serviceId,\n        address user,\n        address setter\n    ) internal returns (bool revoked, uint192 indefiniteWhitelistCount) {\n        indefiniteWhitelistCount = serviceIdToUserToWhitelistStatus[serviceId][\n            user\n        ].indefiniteWhitelistCount;\n        if (\n            serviceIdToUserToSetterToIndefiniteWhitelistStatus[serviceId][user][\n                setter\n            ]\n        ) {\n            serviceIdToUserToSetterToIndefiniteWhitelistStatus[serviceId][user][\n                setter\n            ] = false;\n            indefiniteWhitelistCount--;\n            serviceIdToUserToWhitelistStatus[serviceId][user]\n                .indefiniteWhitelistCount = indefiniteWhitelistCount;\n            revoked = true;\n        }\n    }\n\n    /// @notice Returns if the user is whitelised to use the service\n    /// @param serviceId Service ID\n    /// @param user User address\n    /// @return isWhitelisted If the user is whitelisted\n    function userIsWhitelisted(bytes32 serviceId, address user)\n        internal\n        view\n        returns (bool isWhitelisted)\n    {\n        WhitelistStatus\n            storage whitelistStatus = serviceIdToUserToWhitelistStatus[\n                serviceId\n            ][user];\n        return\n            whitelistStatus.indefiniteWhitelistCount > 0 ||\n            whitelistStatus.expirationTimestamp > block.timestamp;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/api3/contracts/whitelist/Whitelist.sol": {
				"Whitelist": {
					"abi": [],
					"devdoc": {
						"details": "The interface of this contract is not implemented. It should be inherited and its functions should be exposed with a sort of an authorization scheme.",
						"kind": "dev",
						"methods": {},
						"title": "Contract to be inherited by contracts that need temporary and permanent whitelists for services identified by hashes",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/api3/contracts/whitelist/Whitelist.sol\":750:5859  contract Whitelist {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/api3/contracts/whitelist/Whitelist.sol\":750:5859  contract Whitelist {... */\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122016de0728c16ca1db948a717adf9f1a90fcf2a6e1171986b5aac4f6b23b6bffed64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50603e80601a5f395ff3fe60806040525f5ffdfea264697066735822122016de0728c16ca1db948a717adf9f1a90fcf2a6e1171986b5aac4f6b23b6bffed64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xDE SMOD 0x28 0xC1 PUSH13 0xA1DB948A717ADF9F1A90FCF2A6 0xE1 OR NOT DUP7 0xB5 0xAA 0xC4 0xF6 0xB2 EXTCODESIZE PUSH12 0xFFED64736F6C634300081C00 CALLER ",
							"sourceMap": "750:5109:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f5ffdfea264697066735822122016de0728c16ca1db948a717adf9f1a90fcf2a6e1171986b5aac4f6b23b6bffed64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xDE SMOD 0x28 0xC1 PUSH13 0xA1DB948A717ADF9F1A90FCF2A6 0xE1 OR NOT DUP7 0xB5 0xAA 0xC4 0xF6 0xB2 EXTCODESIZE PUSH12 0xFFED64736F6C634300081C00 CALLER ",
							"sourceMap": "750:5109:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"_extendWhitelistExpiration(bytes32,address,uint64)": "infinite",
								"_revokeIndefiniteWhitelistStatus(bytes32,address,address)": "infinite",
								"_setIndefiniteWhitelistStatus(bytes32,address,bool)": "infinite",
								"_setWhitelistExpiration(bytes32,address,uint64)": "infinite",
								"userIsWhitelisted(bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 5859,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016de0728c16ca1db948a717adf9f1a90fcf2a6e1171986b5aac4f6b23b6bffed64736f6c634300081c0033",
									".code": [
										{
											"begin": 750,
											"end": 5859,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 5859,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 5859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 750,
											"end": 5859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 5859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 5859,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/api3/contracts/whitelist/Whitelist.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The interface of this contract is not implemented. It should be inherited and its functions should be exposed with a sort of an authorization scheme.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contract to be inherited by contracts that need temporary and permanent whitelists for services identified by hashes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract implements two kinds of whitelisting:   (1) Temporary, ends when the expiration timestamp is in the past   (2) Indefinite, ends when the indefinite whitelist count is zero Multiple senders can indefinitely whitelist/unwhitelist independently. The user will be considered whitelisted as long as there is at least one active indefinite whitelisting.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/api3/contracts/whitelist/Whitelist.sol\":\"Whitelist\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/api3/contracts/whitelist/Whitelist.sol\":{\"keccak256\":\"0x22e3980c4144e2f57a115e51b05f1aeede12fe94fbeb538a287f02e9eff6be89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24f694a4e72992a4027736207e7962d780707246329ae94b76df9236ee2aa560\",\"dweb:/ipfs/QmZVDuQH3A23S25QZ14C4AAPaGxcLYyxV7Q3oxn43UgXpF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 14,
								"contract": "contracts/api3/contracts/whitelist/Whitelist.sol:Whitelist",
								"label": "serviceIdToUserToWhitelistStatus",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(WhitelistStatus)7_storage))"
							},
							{
								"astId": 22,
								"contract": "contracts/api3/contracts/whitelist/Whitelist.sol:Whitelist",
								"label": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_bool)))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_struct(WhitelistStatus)7_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Whitelist.WhitelistStatus)",
								"numberOfBytes": "32",
								"value": "t_struct(WhitelistStatus)7_storage"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_bool)))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => mapping(address => bool)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							"t_mapping(t_bytes32,t_mapping(t_address,t_struct(WhitelistStatus)7_storage))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(WhitelistStatus)7_storage)"
							},
							"t_struct(WhitelistStatus)7_storage": {
								"encoding": "inplace",
								"label": "struct Whitelist.WhitelistStatus",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/api3/contracts/whitelist/Whitelist.sol:Whitelist",
										"label": "expirationTimestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 6,
										"contract": "contracts/api3/contracts/whitelist/Whitelist.sol:Whitelist",
										"label": "indefiniteWhitelistCount",
										"offset": 8,
										"slot": "0",
										"type": "t_uint192"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint192": {
								"encoding": "inplace",
								"label": "uint192",
								"numberOfBytes": "24"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This contract implements two kinds of whitelisting:   (1) Temporary, ends when the expiration timestamp is in the past   (2) Indefinite, ends when the indefinite whitelist count is zero Multiple senders can indefinitely whitelist/unwhitelist independently. The user will be considered whitelisted as long as there is at least one active indefinite whitelisting.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/api3/contracts/whitelist/Whitelist.sol": {
				"ast": {
					"absolutePath": "contracts/api3/contracts/whitelist/Whitelist.sol",
					"exportedSymbols": {
						"Whitelist": [
							259
						]
					},
					"id": 260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Whitelist",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:693:0",
								"text": "@title Contract to be inherited by contracts that need temporary and\n permanent whitelists for services identified by hashes\n @notice This contract implements two kinds of whitelisting:\n   (1) Temporary, ends when the expiration timestamp is in the past\n   (2) Indefinite, ends when the indefinite whitelist count is zero\n Multiple senders can indefinitely whitelist/unwhitelist independently. The\n user will be considered whitelisted as long as there is at least one active\n indefinite whitelisting.\n @dev The interface of this contract is not implemented. It should be\n inherited and its functions should be exposed with a sort of an\n authorization scheme."
							},
							"fullyImplemented": true,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "Whitelist",
							"nameLocation": "759:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Whitelist.WhitelistStatus",
									"id": 7,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "expirationTimestamp",
											"nameLocation": "815:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "808:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "808:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "indefiniteWhitelistCount",
											"nameLocation": "852:24:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "844:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint192",
												"typeString": "uint192"
											},
											"typeName": {
												"id": 5,
												"name": "uint192",
												"nodeType": "ElementaryTypeName",
												"src": "844:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "WhitelistStatus",
									"nameLocation": "782:15:0",
									"nodeType": "StructDefinition",
									"scope": 259,
									"src": "775:108:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "serviceIdToUserToWhitelistStatus",
									"nameLocation": "962:32:0",
									"nodeType": "VariableDeclaration",
									"scope": 259,
									"src": "889:105:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
										"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus))"
									},
									"typeName": {
										"id": 13,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 8,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "897:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "889:55:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
											"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 12,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 9,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "916:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "908:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
												"typeString": "mapping(address => struct Whitelist.WhitelistStatus)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 11,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 10,
													"name": "WhitelistStatus",
													"nameLocations": [
														"927:15:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 7,
													"src": "927:15:0"
												},
												"referencedDeclaration": 7,
												"src": "927:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage_ptr",
													"typeString": "struct Whitelist.WhitelistStatus"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
									"nameLocation": "1083:50:0",
									"nodeType": "VariableDeclaration",
									"scope": 259,
									"src": "1001:132:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
										"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
									},
									"typeName": {
										"id": 21,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 15,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1009:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1001:64:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
											"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 20,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 16,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1028:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1020:44:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
												"typeString": "mapping(address => mapping(address => bool))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 19,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1039:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1545:332:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "expirationTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1576:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 34,
																			"name": "serviceIdToUserToWhitelistStatus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "1614:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																				"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																			}
																		},
																		"id": 36,
																		"indexExpression": {
																			"id": 35,
																			"name": "serviceId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 25,
																			"src": "1647:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1614:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																			"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																		}
																	},
																	"id": 38,
																	"indexExpression": {
																		"id": 37,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1658:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1614:49:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																		"typeString": "struct Whitelist.WhitelistStatus storage ref"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1685:19:0",
																"memberName": "expirationTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1614:90:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "1576:128:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446f6573206e6f7420657874656e642065787069726174696f6e",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a16e73490ce1331df1c1704a213e46876861e887dc96b6a8876cc983d8c922d8",
																"typeString": "literal_string \"Does not extend expiration\""
															},
															"value": "Does not extend expiration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a16e73490ce1331df1c1704a213e46876861e887dc96b6a8876cc983d8c922d8",
																"typeString": "literal_string \"Does not extend expiration\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1555:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1555:201:0"
											},
											{
												"expression": {
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 44,
																	"name": "serviceIdToUserToWhitelistStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "1766:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																		"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																	}
																},
																"id": 47,
																"indexExpression": {
																	"id": 45,
																	"name": "serviceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "1799:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1766:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																}
															},
															"id": 48,
															"indexExpression": {
																"id": 46,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1810:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1766:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																"typeString": "struct Whitelist.WhitelistStatus storage ref"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1829:19:0",
														"memberName": "expirationTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1766:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 50,
														"name": "expirationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1851:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "1766:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1766:104:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1140:264:0",
										"text": "@notice Extends the expiration of the temporary whitelist of the user\n for the service\n @param serviceId Service ID\n @param user User address\n @param expirationTimestamp Timestamp at which the temporary whitelist\n will expire"
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extendWhitelistExpiration",
									"nameLocation": "1418:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "serviceId",
												"nameLocation": "1462:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1454:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 24,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "expirationTimestamp",
												"nameLocation": "1510:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1503:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 28,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1503:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1444:91:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1545:0:0"
									},
									"scope": 259,
									"src": "1409:468:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2360:121:0",
										"statements": [
											{
												"expression": {
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 64,
																	"name": "serviceIdToUserToWhitelistStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "2370:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																		"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																	}
																},
																"id": 67,
																"indexExpression": {
																	"id": 65,
																	"name": "serviceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "2403:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2370:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																}
															},
															"id": 68,
															"indexExpression": {
																"id": 66,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "2414:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2370:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																"typeString": "struct Whitelist.WhitelistStatus storage ref"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2433:19:0",
														"memberName": "expirationTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "2370:82:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 70,
														"name": "expirationTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "2455:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "2370:104:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2370:104:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1883:339:0",
										"text": "@notice Sets the expiration of the temporary whitelist of the user for\n the service\n @dev Unlike `extendWhitelistExpiration()`, this can hasten expiration\n @param serviceId Service ID\n @param user User address\n @param expirationTimestamp Timestamp at which the temporary whitelist\n will expire"
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setWhitelistExpiration",
									"nameLocation": "2236:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "serviceId",
												"nameLocation": "2277:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2269:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 56,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2304:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2296:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2296:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "expirationTimestamp",
												"nameLocation": "2325:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2318:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 60,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2318:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:91:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:0"
									},
									"scope": 259,
									"src": "2227:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "3063:1102:0",
										"statements": [
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 86,
														"name": "indefiniteWhitelistCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "3073:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 87,
																	"name": "serviceIdToUserToWhitelistStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3100:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																		"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																	}
																},
																"id": 89,
																"indexExpression": {
																	"id": 88,
																	"name": "serviceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "3133:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3100:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																}
															},
															"id": 91,
															"indexExpression": {
																"id": 90,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "3157:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3100:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																"typeString": "struct Whitelist.WhitelistStatus storage ref"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3172:24:0",
														"memberName": "indefiniteWhitelistCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "3100:96:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "3073:123:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "3073:123:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 95,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3223:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3245:110:0",
														"subExpression": {
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 96,
																		"name": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "3246:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
																			"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
																		}
																	},
																	"id": 98,
																	"indexExpression": {
																		"id": 97,
																		"name": "serviceId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "3297:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3246:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(address => bool))"
																	}
																},
																"id": 100,
																"indexExpression": {
																	"id": 99,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "3325:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3246:97:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 103,
															"indexExpression": {
																"expression": {
																	"id": 101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3344:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3348:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3246:109:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3223:132:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3702:7:0",
															"subExpression": {
																"id": 130,
																"name": "status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "3703:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"baseExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 132,
																		"name": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "3725:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
																			"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
																		}
																	},
																	"id": 134,
																	"indexExpression": {
																		"id": 133,
																		"name": "serviceId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "3776:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3725:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(address => bool))"
																	}
																},
																"id": 136,
																"indexExpression": {
																	"id": 135,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "3787:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3725:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 139,
															"indexExpression": {
																"expression": {
																	"id": 137,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3810:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3814:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3810:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3725:109:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3702:132:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 165,
													"nodeType": "IfStatement",
													"src": "3685:474:0",
													"trueBody": {
														"id": 164,
														"nodeType": "Block",
														"src": "3845:314:0",
														"statements": [
															{
																"expression": {
																	"id": 150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 141,
																					"name": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 22,
																					"src": "3859:50:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
																						"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
																					}
																				},
																				"id": 146,
																				"indexExpression": {
																					"id": 142,
																					"name": "serviceId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 77,
																					"src": "3910:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3859:61:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(address => bool))"
																				}
																			},
																			"id": 147,
																			"indexExpression": {
																				"id": 143,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 79,
																				"src": "3921:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3859:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 148,
																		"indexExpression": {
																			"expression": {
																				"id": 144,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3944:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3948:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3944:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "3859:109:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3971:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "3859:117:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 151,
																"nodeType": "ExpressionStatement",
																"src": "3859:117:0"
															},
															{
																"expression": {
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "--",
																	"prefix": false,
																	"src": "3990:26:0",
																	"subExpression": {
																		"id": 152,
																		"name": "indefiniteWhitelistCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "3990:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"id": 154,
																"nodeType": "ExpressionStatement",
																"src": "3990:26:0"
															},
															{
																"expression": {
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 155,
																					"name": "serviceIdToUserToWhitelistStatus",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 14,
																					"src": "4030:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																						"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																					}
																				},
																				"id": 158,
																				"indexExpression": {
																					"id": 156,
																					"name": "serviceId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 77,
																					"src": "4063:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4030:43:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																					"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																				}
																			},
																			"id": 159,
																			"indexExpression": {
																				"id": 157,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 79,
																				"src": "4074:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4030:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																				"typeString": "struct Whitelist.WhitelistStatus storage ref"
																			}
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "4097:24:0",
																		"memberName": "indefiniteWhitelistCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 6,
																		"src": "4030:91:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 161,
																		"name": "indefiniteWhitelistCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "4124:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint192",
																			"typeString": "uint192"
																		}
																	},
																	"src": "4030:118:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"id": 163,
																"nodeType": "ExpressionStatement",
																"src": "4030:118:0"
															}
														]
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "3206:953:0",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "3366:313:0",
													"statements": [
														{
															"expression": {
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 106,
																				"name": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "3380:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
																					"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
																				}
																			},
																			"id": 111,
																			"indexExpression": {
																				"id": 107,
																				"name": "serviceId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 77,
																				"src": "3431:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3380:61:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 112,
																		"indexExpression": {
																			"id": 108,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "3442:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3380:67:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 113,
																	"indexExpression": {
																		"expression": {
																			"id": 109,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3465:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3469:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3465:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3380:109:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3492:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3380:116:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 116,
															"nodeType": "ExpressionStatement",
															"src": "3380:116:0"
														},
														{
															"expression": {
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3510:26:0",
																"subExpression": {
																	"id": 117,
																	"name": "indefiniteWhitelistCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "3510:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"id": 119,
															"nodeType": "ExpressionStatement",
															"src": "3510:26:0"
														},
														{
															"expression": {
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 120,
																				"name": "serviceIdToUserToWhitelistStatus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "3550:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																					"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																				}
																			},
																			"id": 123,
																			"indexExpression": {
																				"id": 121,
																				"name": "serviceId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 77,
																				"src": "3583:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3550:43:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																			}
																		},
																		"id": 124,
																		"indexExpression": {
																			"id": 122,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 79,
																			"src": "3594:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3550:49:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																			"typeString": "struct Whitelist.WhitelistStatus storage ref"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3617:24:0",
																	"memberName": "indefiniteWhitelistCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "3550:91:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 126,
																	"name": "indefiniteWhitelistCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "3644:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"src": "3550:118:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"id": 128,
															"nodeType": "ExpressionStatement",
															"src": "3550:118:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2487:404:0",
										"text": "@notice Sets the indefinite whitelist status of the user for the\n service\n @dev As long as at least there is at least one account that has set the\n indefinite whitelist status of the user for the service as true, the\n user will be considered whitelisted\n @param serviceId Service ID\n @param user User address\n @param status Indefinite whitelist status"
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setIndefiniteWhitelistStatus",
									"nameLocation": "2905:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "serviceId",
												"nameLocation": "2952:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2944:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 76,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2979:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2971:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2998:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2993:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 80,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:76:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "indefiniteWhitelistCount",
												"nameLocation": "3037:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3029:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 83,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3028:34:0"
									},
									"scope": 259,
									"src": "2896:1269:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "4613:620:0",
										"statements": [
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "indefiniteWhitelistCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "4623:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 183,
																	"name": "serviceIdToUserToWhitelistStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "4650:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																		"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																	}
																},
																"id": 185,
																"indexExpression": {
																	"id": 184,
																	"name": "serviceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "4683:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4650:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																	"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																}
															},
															"id": 187,
															"indexExpression": {
																"id": 186,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "4707:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4650:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																"typeString": "struct Whitelist.WhitelistStatus storage ref"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4722:24:0",
														"memberName": "indefiniteWhitelistCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4650:96:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "4623:123:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "4623:123:0"
											},
											{
												"condition": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 191,
																"name": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "4773:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
																	"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
																}
															},
															"id": 193,
															"indexExpression": {
																"id": 192,
																"name": "serviceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "4824:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4773:61:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 195,
														"indexExpression": {
															"id": 194,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4835:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4773:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 197,
													"indexExpression": {
														"id": 196,
														"name": "setter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4858:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4773:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "4756:471:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "4889:338:0",
													"statements": [
														{
															"expression": {
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 198,
																				"name": "serviceIdToUserToSetterToIndefiniteWhitelistStatus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "4903:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$_$",
																					"typeString": "mapping(bytes32 => mapping(address => mapping(address => bool)))"
																				}
																			},
																			"id": 202,
																			"indexExpression": {
																				"id": 199,
																				"name": "serviceId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "4954:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4903:61:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 203,
																		"indexExpression": {
																			"id": 200,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "4965:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4903:67:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 204,
																	"indexExpression": {
																		"id": 201,
																		"name": "setter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 175,
																		"src": "4988:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4903:105:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5011:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4903:113:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 207,
															"nodeType": "ExpressionStatement",
															"src": "4903:113:0"
														},
														{
															"expression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "5030:26:0",
																"subExpression": {
																	"id": 208,
																	"name": "indefiniteWhitelistCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5030:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"id": 210,
															"nodeType": "ExpressionStatement",
															"src": "5030:26:0"
														},
														{
															"expression": {
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 211,
																				"name": "serviceIdToUserToWhitelistStatus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "5070:32:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																					"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
																				}
																			},
																			"id": 214,
																			"indexExpression": {
																				"id": 212,
																				"name": "serviceId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "5103:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5070:43:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
																				"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
																			}
																		},
																		"id": 215,
																		"indexExpression": {
																			"id": 213,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 173,
																			"src": "5114:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5070:49:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
																			"typeString": "struct Whitelist.WhitelistStatus storage ref"
																		}
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5137:24:0",
																	"memberName": "indefiniteWhitelistCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "5070:91:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 217,
																	"name": "indefiniteWhitelistCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5164:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"src": "5070:118:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															},
															"id": 219,
															"nodeType": "ExpressionStatement",
															"src": "5070:118:0"
														},
														{
															"expression": {
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 220,
																	"name": "revoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "5202:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5202:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 223,
															"nodeType": "ExpressionStatement",
															"src": "5202:14:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "4171:250:0",
										"text": "@notice Revokes the indefinite whitelist status granted to the user for\n the service by a specific account\n @param serviceId Service ID\n @param user User address\n @param setter Setter of the indefinite whitelist status"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeIndefiniteWhitelistStatus",
									"nameLocation": "4435:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "serviceId",
												"nameLocation": "4485:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4477:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 170,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4512:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4504:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "setter",
												"nameLocation": "4534:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:79:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "revoked",
												"nameLocation": "4570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4565:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "indefiniteWhitelistCount",
												"nameLocation": "4587:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4579:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 179,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:48:0"
									},
									"scope": 259,
									"src": "4426:807:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "5565:292:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "whitelistStatus",
														"nameLocation": "5611:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "5575:51:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage_ptr",
															"typeString": "struct Whitelist.WhitelistStatus"
														},
														"typeName": {
															"id": 238,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 237,
																"name": "WhitelistStatus",
																"nameLocations": [
																	"5575:15:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 7,
																"src": "5575:15:0"
															},
															"referencedDeclaration": 7,
															"src": "5575:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage_ptr",
																"typeString": "struct Whitelist.WhitelistStatus"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 240,
															"name": "serviceIdToUserToWhitelistStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "5629:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$_$",
																"typeString": "mapping(bytes32 => mapping(address => struct Whitelist.WhitelistStatus storage ref))"
															}
														},
														"id": 242,
														"indexExpression": {
															"id": 241,
															"name": "serviceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "5679:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5629:73:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_WhitelistStatus_$7_storage_$",
															"typeString": "mapping(address => struct Whitelist.WhitelistStatus storage ref)"
														}
													},
													"id": 244,
													"indexExpression": {
														"id": 243,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "5703:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5629:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage",
														"typeString": "struct Whitelist.WhitelistStatus storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5575:133:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 246,
																"name": "whitelistStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5737:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage_ptr",
																	"typeString": "struct Whitelist.WhitelistStatus storage pointer"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5753:24:0",
															"memberName": "indefiniteWhitelistCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "5737:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint192",
																"typeString": "uint192"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5780:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5737:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 250,
																"name": "whitelistStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5797:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_WhitelistStatus_$7_storage_ptr",
																	"typeString": "struct Whitelist.WhitelistStatus storage pointer"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5813:19:0",
															"memberName": "expirationTimestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5797:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 252,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5835:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5841:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5835:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5797:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5737:113:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 236,
												"id": 256,
												"nodeType": "Return",
												"src": "5718:132:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "5239:190:0",
										"text": "@notice Returns if the user is whitelised to use the service\n @param serviceId Service ID\n @param user User address\n @return isWhitelisted If the user is whitelisted"
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userIsWhitelisted",
									"nameLocation": "5443:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "serviceId",
												"nameLocation": "5469:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "5461:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "5480:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:33:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "isWhitelisted",
												"nameLocation": "5546:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "5541:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5541:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5540:20:0"
									},
									"scope": 259,
									"src": "5434:423:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 260,
							"src": "750:5109:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5828:0"
				},
				"id": 0
			}
		}
	}
}